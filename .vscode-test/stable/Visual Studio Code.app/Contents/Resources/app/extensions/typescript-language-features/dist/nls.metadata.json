{"utils/versionProvider":{"messages":["Could not load the TypeScript version at this path","VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code."],"keys":["couldNotLoadTsVersion","noBundledServerFound"]},"utils/versionPicker":{"messages":["Use VS Code's Version","Use Workspace Version","Learn More","Select the TypeScript version used for JavaScript and TypeScript language features"],"keys":["useVSCodeVersionOption","useWorkspaceVersionOption","learnMore","selectTsVersion"]},"utils/typingsStatus":{"messages":["Fetching data for better TypeScript IntelliSense","Could not install typings files for JavaScript language features. Please ensure that NPM is installed or configure 'typescript.npm' in your user settings. Click [here]({0}) to learn more.","Don't Show Again"],"keys":["installingPackages","typesInstallerInitializationFailed.title","typesInstallerInitializationFailed.doNotCheckAgain"]},"utils/surveyor":{"messages":["Help improve VS Code's support for [checkJs](https://code.visualstudio.com/Docs/languages/javascript#_type-checking) in JavaScript! Since you have been using this feature, would you consider taking a short survey about your experience?","Take Short Survey","Remind Me Later","Disable JS/TS Surveys"],"keys":["survey.checkJs.prompt","takeShortSurvey","remindLater","neverAgain"]},"utils/projectStatus":{"messages":["To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}","To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.","Configure Excludes","To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.","Configure Excludes"],"keys":["hintExclude","hintExclude.generic","large.label","hintExclude.tooltip","large.label"]},"utils/logger":{"messages":["TypeScript"],"keys":["channelName"]},"utils/api":{"messages":["invalid version"],"keys":["invalidVersion"]},"features/updatePathsOnRename":{"messages":["Checking for update of JS/TS imports","Update imports for moved file: '{0}'?","No","Yes","Always automatically update imports","Never automatically update imports"],"keys":["renameProgress.title","prompt","reject.title","accept.title","always.title","never.title"]},"features/task":{"messages":["build - {0}","watch - {0}"],"keys":["buildTscLabel","buildAndWatchTscLabel"]},"features/rename":{"messages":["An error occurred while renaming file"],"keys":["fileRenameFail"]},"features/referencesCodeLens":{"messages":["1 reference","{0} references"],"keys":["oneReferenceLabel","manyReferenceLabel"]},"features/quickFix":{"messages":["{0} (Fix all in file)"],"keys":["fixAllInFileLabel"]},"features/organizeImports":{"messages":["Organize Imports"],"keys":["organizeImportsAction.title"]},"features/jsDocCompletions":{"messages":["JSDoc comment"],"keys":["typescript.jsDocCompletionItem.documentation"]},"features/implementationsCodeLens":{"messages":["1 implementation","{0} implementations"],"keys":["oneImplementationLabel","manyImplementationLabel"]},"features/fixAll":{"messages":["Auto fix"],"keys":["autoFix.label"]},"features/directiveCommentCompletions":{"messages":["Enables semantic checking in a JavaScript file. Must be at the top of a file.","Disables semantic checking in a JavaScript file. Must be at the top of a file.","Suppresses @ts-check errors on the next line of a file."],"keys":["ts-check","ts-nocheck","ts-ignore"]},"features/completions":{"messages":["Select code action to apply","Acquiring typings...","Acquiring typings definitions for IntelliSense.","Auto import from {0}"],"keys":["selectCodeAction",{"key":"acquiringTypingsLabel","comment":["Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized"]},{"key":"acquiringTypingsDetail","comment":["Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized"]},"autoImportLabel"]},"features/baseCodeLensProvider":{"messages":["Could not determine references"],"keys":["referenceErrorLabel"]},"commands/goToProjectConfiguration":{"messages":["Please open a folder in VS Code to use a TypeScript or JavaScript project","Could not determine TypeScript or JavaScript project. Unsupported file type","Could not determine TypeScript or JavaScript project","File is not part of a TypeScript project. Click [here]({0}) to learn more.","File is not part of a JavaScript project Click [here]({0}) to learn more.","Configure tsconfig.json","Configure jsconfig.json"],"keys":["typescript.projectConfigNoWorkspace","typescript.projectConfigUnsupportedFile","typescript.projectConfigCouldNotGetInfo","typescript.noTypeScriptProjectConfig","typescript.noJavaScriptProjectConfig","typescript.configureTsconfigQuickPick","typescript.configureJsconfigQuickPick"]},"typescriptServiceClient":{"messages":["The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.","TypeScript language server exited with error. Error message is: {0}","TS Server logging requires TS 2.2.2+","TS Server logging is off. Please set `typescript.tsserver.log` and restart the TS server to enable logging","Enable logging and restart TS server","TS Server has not started logging.","Could not open TS Server log file","The TypeScript language service died 5 times right after it got started. The service will not be restarted.","Report Issue","The TypeScript language service died unexpectedly 5 times in the last 5 Minutes.","Report Issue","Initializing JS/TS language features"],"keys":["noServerFound","serverExitedWithError","typescript.openTsServerLog.notSupported","typescript.openTsServerLog.loggingNotEnabled","typescript.openTsServerLog.enableAndReloadOption","typescript.openTsServerLog.noLogFile","openTsServerLog.openFileFailedFailed","serverDiedAfterStart","serverDiedReportIssue","serverDied","serverDiedReportIssue","serverLoading.progress"]}}